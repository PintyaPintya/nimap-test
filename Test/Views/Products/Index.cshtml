@model IEnumerable<Product>

@{
    ViewData["Title"] = "Products";
}

<h2>Products</h2>

<p>
    <a href="@Url.Action("Create")" class="btn btn-primary">Create New Product</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>ProductId</th>
            <th>ProductName</th>
            <th>CategoryId</th>
            <th>CategoryName</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.ProductId</td>
                <td>@item.ProductName</td>
                <td>@item.CategoryId</td>
                <td>@item.Category.CategoryName</td>
                <td>
                    <a href="@Url.Action("Edit", new { id = item.ProductId })" class="btn btn-warning btn-sm">Edit</a>
                    <a href="@Url.Action("Delete", new { id = item.ProductId })" class="btn btn-danger btn-sm">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    @if (ViewBag.CurrentPage > 1)
    {
        <a href="@Url.Action("Index", new { page = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize })" class="btn btn-primary">Previous</a>
    }

    <span>Page @ViewBag.CurrentPage of @Math.Ceiling((double)ViewBag.TotalItems / ViewBag.PageSize)</span>

    @if (ViewBag.CurrentPage * ViewBag.PageSize < ViewBag.TotalItems)
    {
        <a href="@Url.Action("Index", new { page = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize })" class="btn btn-primary">Next</a>
    }
</div>
